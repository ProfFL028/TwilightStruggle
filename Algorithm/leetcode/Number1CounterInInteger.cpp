class Number1CounterInInteger {
public:
    static int hammingWeight(uint32_t n) {
        int result = 0;
        while (n) {
            n -= n & -n;
            result ++;
        }
        return result;
    }

    static int hammingWeight2(uint32_t n) {
        n = ((n >> 1) & 0b01010101010101010101010101010101)
            + (n & 0b01010101010101010101010101010101);
        n = ((n >> 2) & 0b00110011001100110011001100110011)
            + (n & 0b00110011001100110011001100110011);
        n = ((n >> 4) & 0b00001111000011110000111100001111)
            + (n & 0b00001111000011110000111100001111);
        n = ((n >> 8) & 0b00000000111111110000000011111111)
            + (n & 0b00000000111111110000000011111111);
        n = ((n >> 16) & 0b00000000000000001111111111111111)
            + (n & 0b00000000000000001111111111111111);
        return n;
    }

};